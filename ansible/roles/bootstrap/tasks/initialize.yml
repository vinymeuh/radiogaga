- name: Setting facts
  set_fact:
    hostname: "{{ bootstrap.initialize.hostname | mandatory }}"
    domainname: "{{ bootstrap.initialize.domainname | mandatory }}"
    use_dhcp: "{{ bootstrap.initialize.use_dhcp | mandatory | bool }}"

- name: Create staging directory
  tempfile:
    state: directory
  register: tempfile

- name: Create sub directories in staging directory
  file:
    path: "{{ tempfile.path }}/{{ item }}" 
    state: directory
    mode: 0755
  loop:
    - etc
    - etc/init.d
    - etc/network
    - etc/runlevels/boot
    - etc/runlevels/default
    - etc/runlevels/sysinit
    - etc/ssh

- name: Generate configuration files
  template:
    src: "{{ item.file | default(item) }}"
    dest: "{{ tempfile.path }}/{{ item.file | default(item) }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - etc/hostname
    - etc/hosts
    - { file: etc/init.d/bootstrap-sshd, mode: "0755"}
    - etc/ssh/myca.pub
    - etc/ssh/sshd_config

- import_tasks: network_dhcp.yml
  when: use_dhcp

- import_tasks: network_static.yml
  when: not use_dhcp

- name: Create symbolic links
  file:
    src: "{{ item.src }}"
    dest: "{{ tempfile.path }}/{{ item.dest }}"
    state: link
    force: yes
    follow: no
  loop:
    - { dest: "etc/runlevels/boot/bootmisc", src: "/etc/init.d/bootmisc" }
    - { dest: "etc/runlevels/boot/hostname", src: "/etc/init.d/hostname" }
    - { dest: "etc/runlevels/boot/modules", src: "/etc/init.d/modules" }
    - { dest: "etc/runlevels/boot/networking", src: "/etc/init.d/networking" }
    - { dest: "etc/runlevels/boot/urandom", src: "/etc/init.d/urandom" }
    - { dest: "etc/runlevels/default/bootstrap-sshd", src: "/etc/init.d/bootstrap-sshd" }
    - { dest: "etc/runlevels/sysinit/devfs", src: "/etc/init.d/devfs" }
    - { dest: "etc/runlevels/sysinit/dmesg", src: "/etc/init.d/dmesg" }
    - { dest: "etc/runlevels/sysinit/hwdrivers", src: "/etc/init.d/hwdrivers" }
    - { dest: "etc/runlevels/sysinit/mdev", src: "/etc/init.d/mdev" }
    - { dest: "etc/runlevels/sysinit/modloop", src: "/etc/init.d/modloop" }

- name: Create overlay file
  command: gnutar czf {{ hostname }}.apkovl.tar.gz --owner=0 --group=0 etc
  args:
    chdir: "{{ tempfile.path }}"
    warn: no

- name: Copy overlay file on {{ mount_point }}
  copy:
    src: "{{ tempfile.path }}/{{ hostname }}.apkovl.tar.gz"
    dest: "{{ mount_point | mandatory }}"

- name: Copy setup-alpine answer file on {{ mount_point }}
  template:
    src: setup.answer
    dest: "{{ mount_point | mandatory }}"

- name: Delete staging directory
  file:
    path: "{{ tempfile.path }}/"
    state: absent
